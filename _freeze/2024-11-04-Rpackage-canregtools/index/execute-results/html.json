{
  "hash": "ff28959d534770b2e447387489734793",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Canregtools\"\nsubtitle: \"An R package used in PBCRs\"\nauthor: \"️Qiong Chen👨‍⚕️ Phd.\"\ndate: 2024-11-4\ndate-modified: last-modified\ndate-format: \"dddd MMM D, YYYY\"\ninstitute: \"🏥Henan Cancer Center\"\nformat:\n  revealjs:\n    slide-number: true\n    scrollable: false\n    smaller: true\n    sc-sb-title: h1\n    footer: \"https://slides.chenq.site\"\nrevealjs-plugins:\n  - attribution\nfilters:\n   - reveal-header\n   - reveal-auto-agenda\nauto-agenda:\n  bullets: numbered\n  heading: Contents\ntitle-slide-attributes:\n  data-background-color: \"lightblue\"\ncategories: [\"肿瘤登记\", \"R语言\"]\naddress: \"Beijing\"\n---\n\n\n\n## What we actually do in PBCR {.smaller}\n> A system designed to collect, store, and manage cancer cases within a population, which is crucial for monitoring cancer incidence, mortality, survival, and prevalence.\n\n- Data internal consistency check\n- Quality check (CI5, annual check of quality control for registry)\n- Calculation of statistical indicator\n- Data visualization\n- Reports\n\n## Which tools are available ?\n\n- IARCcrgTools\n- JRC tools\n- Canreg5\n- SEER*Stat\n\nOther software or language including R, SAS, STATA, Python\n\n## What can canregtools do ?\n> Canregtools is an R package developed to streamline data analysis, visualization, and reporting in cancer registration. It includes five sets of R functions that cover data reading, processing, statistical calculations, visualization, and reporting.\n\n:::: {.columns}\n\n::: {.column width=\"33%\"}\n#### Data processing\n- cutage()\n- expand_age_pop()\n- classify_icd10()\n- classify-childhood()\n- tidy_*()\n- write_*()\n:::\n\n::: {.column width=\"33%\"}\n#### Statistics calculation\n- ageadjust()\n- truncrate()\n- cumrate()\n- cumrisk()\n- lt()\n- expand_lifetable()\n:::\n\n::: {.column width=\"33%\"}\n#### Statistics sheet\n- summary()\n- create_asr()\n- create_quality()\n- create_age_rate()\n- create_sheet()\n:::\n\n::::\n\n## What can canregtools do ?\n> Canregtools is a tool designed for high-level cancer registries. It helps process data from multiple registries in batch mode, allowing users to filter data based on custom conditions and reformat or merge cancer registration data according to registry attributes.\n\n:::: {.columns}\n\n::: {.column width=\"33%\"}\n#### Registry attributes\n- write_registry()\n- write_areacode()\n- write_area_type()\n- tidy_areacode()\n:::\n\n::: {.column width=\"33%\"}\n#### Filter/merge object\n- cr_select()\n- cr_merge()\n- reframe_fbswicd()\n:::\n\n::: {.column width=\"33%\"}\n#### Statistics sheet\n- summary()\n- create_asr()\n- create_quality()\n- create_age_rate()\n- create_sheet()\n:::\n\n::::\n\n\n## Define S3 class for generic functions\n\n> We define a set of class for different methods to carry out different functions.\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n#### S3 class for single registry\n- canreg\n- fbswicd\n- asr\n- quality\n:::\n\n::: {.column width=\"50%\"}\n#### S3 class for multiple registries\n- canregs\n- fbswicds\n- asrs\n- qualities\n:::\n\n::::\n\n#### S3 method\ncreate_asr, create_quality, create_age_rate, create_sheet, cr_select, cr_merge, reframe_fbswicd\n\n## Internal consistency check\n\n> Internal consistency checks are a crucial step before conducting data analysis. We need to identify and address any impossible or unlikely combinations of variables to insure the data validity.\n\n\n:::: {.columns}\n\n::: {.column width=\"33%\"}\n#### Variable\n- check_topo()\n- check_morp()\n- check_icd10()\n- check_areacode()\n- check_sex()\n- check_id()\n:::\n\n::: {.column width=\"33%\"}\n#### Variables combination\n- check_sex_morp()\n- check_sex_topo()\n- check_topo_morp()\n- check_morp_beha()\n- check_morp_grad()\n- check_age_topo_morp()\n:::\n\n::: {.column width=\"33%\"}\n#### Format\n- check_header()\n- check_followup()\n- ICDO3toICD10()\n:::\n\n::::\n\n\n\n## How to install\n- [Downlaod R (Rhttps://cloud.r-project.org)](https://cloud.r-project.org)\n- [Download Rstudio(https://posit.co/download/rstudio-desktop/)](https://posit.co/download/rstudio-desktop/)\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n![](images/R.jpg)\n:::\n\n::: {.column width=\"50%\"}\n![](images/RStudio.jpg)\n:::\n\n::::\n\n## How to install\nInstall it from github repository\n```r\n# install the remotes package if doesn't installed\ninstall.packages(\"remotes) \nlibrary(remotes)\ninstall_github(\"gigu003/canregtools\")\n```\n\nInstall it from compiled local source package file\n```r\n# install the remotes package if doesn't installed\ninstall.packages(\"remotes) \nlibrary(remotes)\ninstall_local(\"canregtools_0.2.7.tar.gz\", type = \"source\")\n```\n\n\n\n\n# Single cancer registry\n## Raw data(call for data from NCC)\n> The raw data is an Excel file with three sheets named **FB**, **SW**, and **POP**, which store incidence data, mortality data, and population data, respectively.\n\n:::: {.columns}\n\n::: {.column width=\"60%\"}\n![](images/call_for_data.jpg)\n:::\n\n::: {.column width=\"30%\"}\n![](images/popu.jpg)\n:::\n\n::::\n\n\n## Reading raw data to 'canreg' data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(canregtools)\nlibrary(dplyr)\nfiles <- list.files(\"~/website/slides/outputs\", full.names = TRUE)\nfile <- files[1]\ndata <- read_canreg(file)\nclass(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"canreg\" \"list\"  \n```\n\n\n:::\n\n```{.r .cell-code}\nnames(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"areacode\" \"FBcases\"  \"SWcases\"  \"POP\"     \n```\n\n\n:::\n:::\n\n\n\n\n## canreg object with class of 'canreg' {.smaller}\n\n> 'canreg' is a list contains four elements named 'areacode', 'FBcases', 'SWcases', and 'POP', which were read from \"FB\", \"SW\" and \"POP\" sheets of raw data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"areacode\" \"FBcases\"  \"SWcases\"  \"POP\"     \n```\n\n\n:::\n\n```{.r .cell-code}\ndata$areacode\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"410102\"\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(data$FBcases)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 23\n  registr         name  id    sex   birthda    address addcode trib  occu  marri\n  <chr>           <chr> <chr> <chr> <date>     <chr>   <chr>   <chr> <chr> <chr>\n1 214105001664899 赵浩… 4105… 1     1975-04-17 河南省… 410102… 01    31    2    \n2 214108021590500 范晓… 3708… 2     1991-01-16 河南省… 410102… 01    14    2    \n3 214101021723818 赵莉  4127… 2     1962-10-15 河南省… 410102… 01    00    2    \n4 214112021234655 李秀… 4112… 2     1951-03-09 丽城小… 410102… 01    49    2    \n5 214116241372902 刘贵… 4101… 1     1955-07-15 河南省… 410102… 01    61    2    \n6 234110021050453 毛根… 4110… 1     1939-12-15 河南省… 410102… 01    28    5    \n# ℹ 13 more variables: inciden <date>, topo <chr>, morp <chr>, beha <chr>,\n#   grad <chr>, basi <chr>, icd10 <chr>, autoicd10 <chr>, lastcontact <dttm>,\n#   status <chr>, caus <chr>, deathda <date>, deadplace <chr>\n```\n\n\n:::\n:::\n\n\n\n## canreg object with class of 'canreg' {.smaller}\n\n> 'canreg' is a list contains four elements including 'areacode', 'FBcases', 'SWcases', and 'POP'\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"areacode\" \"FBcases\"  \"SWcases\"  \"POP\"     \n```\n\n\n:::\n\n```{.r .cell-code}\nhead(data$SWcases)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 23\n  registr         name  id    sex   birthda    address addcode trib  occu  marri\n  <chr>           <chr> <chr> <chr> <date>     <chr>   <chr>   <chr> <chr> <chr>\n1 174101001241467 翟玉… 4101… 2     1921-02-18 河南省… 410102… 01    39    2    \n2 184101001562256 王再… 5106… 1     1935-05-15 河南省… 410102… 01    80    2    \n3 184101001120018 张秀… 4101… 2     1941-02-16 郑州市… 410102… 01    29    2    \n4 184101001561642 李长… 4101… 1     1952-07-06 河南省… 410102… 01    90    2    \n5 184101021600573 董建… 4101… 1     1947-08-21 河南省… 410102… 01    85    2    \n6 184101001119830 孙富… 4101… 1     1941-08-16 河南省… 410102… 01    29    2    \n# ℹ 13 more variables: inciden <date>, topo <chr>, morp <chr>, beha <chr>,\n#   grad <chr>, basi <chr>, icd10 <chr>, autoicd10 <chr>, lastcontact <dttm>,\n#   status <chr>, caus <chr>, deathda <date>, deadplace <chr>\n```\n\n\n:::\n:::\n\n\n\n\n## canreg object with class of 'canreg' {.smaller}\n\n> 'canreg' is a list contains four elements including 'areacode', 'FBcases', 'SWcases', and 'POP'\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"areacode\" \"FBcases\"  \"SWcases\"  \"POP\"     \n```\n\n\n:::\n\n```{.r .cell-code}\nhead(data$POP)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n   year   sex agegrp   rks\n  <int> <int> <fct>  <int>\n1  2021     1 0~      3850\n2  2021     1 1~     14405\n3  2021     1 5~     15176\n4  2021     1 10~    16227\n5  2021     1 15~    18685\n6  2021     1 20~    27799\n```\n\n\n:::\n:::\n\n\n\n\n## Counting 'canreg' data to 'fbswicd' data {.smaller}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfbsw <- count_canreg(data, cancer_type = \"big\")\nclass(fbsw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"fbswicd\" \"list\"   \n```\n\n\n:::\n\n```{.r .cell-code}\nnames(fbsw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"areacode\" \"fbswicd\"  \"sitemorp\" \"pop\"     \n```\n\n\n:::\n\n```{.r .cell-code}\nhead(fbsw$fbswicd, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    year   sex agegrp cancer   fbs   sws    mv    ub   sub m8000   dco\n   <int> <int> <fctr>  <int> <int> <int> <int> <int> <int> <int> <int>\n1:  2021     1   0 岁      0     0     0     0     0     0     0     0\n2:  2021     1   0 岁     60     3     0     2     1     1     1     0\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(fbsw$sitemorp,2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    year   sex cancer               site              morp\n   <int> <int>  <int>             <list>            <list>\n1:  2021     1     NA <data.frame[15x2]> <data.frame[8x2]>\n2:  2021     2    115  <data.frame[3x2]> <data.frame[9x2]>\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(fbsw$pop,2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    year   sex agegrp   rks\n   <int> <int> <fctr> <int>\n1:  2021     1   0 岁  3850\n2:  2021     1 1-4 岁 14405\n```\n\n\n:::\n:::\n\n\n\n\n## Summary the canreg data {.smaller}\n> summary function could quickly calculate summary data of 'canreg' object.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsumm <- summary(data)\nclass(summ)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"summary\" \"list\"   \n```\n\n\n:::\n\n```{.r .cell-code}\nnames(summ)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"areacode\"         \"fbs\"              \"inci\"             \"sws\"             \n [5] \"mort\"             \"mi\"               \"rks\"              \"rks_year\"        \n [9] \"inci_vars\"        \"miss_r_vars_inci\" \"mort_vars\"        \"miss_r_vars_mort\"\n```\n\n\n:::\n\n```{.r .cell-code}\npurrr::pluck(summ, \"mi\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.3805414\n```\n\n\n:::\n\n```{.r .cell-code}\npurrr::pluck(summ, \"inci\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 373.15\n```\n\n\n:::\n\n```{.r .cell-code}\npurrr::pluck(summ, \"mort\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 142\n```\n\n\n:::\n:::\n\n\n\n## Calculating age standardized rate {.smaller}\n> create_asr function could calculate age standardized rate, truncated rate, and cumulated rate based on provided standard population, it could also estimate the variance and 95% confidence interval of the rate.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# list all available standard population\nls_std_vars()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"cn64\"    \"cn82\"    \"cn2000\"  \"wld85\"   \"wld2000\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# calculate asr using the create_asr() function\ncreate_asr(fbsw, event = fbs, year, sex, cancer, std = c(\"cn2000\", \"wld85\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 58 × 11\n    year   sex cancer no_cases     cr asr_cn2000 asr_wld85 truncr_cn2000\n   <int> <int>  <int>    <int>  <dbl>      <dbl>     <dbl>         <dbl>\n 1  2021     1      0       18   5.50       4.56      4.06          6.91\n 2  2021     1     60     1087 332.       275.      273.          430.  \n 3  2021     1     61     1068 326.       270.      269.          424.  \n 4  2021     1    101       18   5.50       4.65      4.91         10.4 \n 5  2021     1    102        5   1.53       1.23      1.45          2.63\n 6  2021     1    103       47  14.4       10.8      10.3          11.2 \n 7  2021     1    104       65  19.9       15.6      16.1          21.9 \n 8  2021     1    105       87  26.6       21.2      21.7          33.8 \n 9  2021     1    106       84  25.7       20.9      21.7          38.0 \n10  2021     1    107       21   6.41       5.19      5.57          9.84\n# ℹ 48 more rows\n# ℹ 3 more variables: truncr_wld85 <dbl>, cumur <dbl>, prop <dbl>\n```\n\n\n:::\n:::\n\n\n\n## Calculating age standardized rate  {.smaller}\n> The drop_total, drop_others, and add_labels functions can perform further processing on the ASR data, such as removing other cancers, removing total cancer, and adding labels.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncreate_asr(fbsw, event = fbs, year, sex, cancer) |> \n  drop_total() |> drop_others() |> \n  add_labels(lang = \"en\", label_type = \"abbr\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 48 × 13\n    year sex   cancer site             icd10 no_cases    cr asr_cn2000 asr_wld85\n   <int> <fct>  <int> <fct>            <fct>    <int> <dbl>      <dbl>     <dbl>\n 1  2021 Male     101 Oral Cavity & P… C00-…       18  5.50       4.65      4.91\n 2  2021 Male     102 Nasopharynx      C11          5  1.53       1.23      1.45\n 3  2021 Male     103 Esophagus        C15         47 14.4       10.8      10.3 \n 4  2021 Male     104 Stomach          C16         65 19.9       15.6      16.1 \n 5  2021 Male     105 Colorectum       C18-…       87 26.6       21.2      21.7 \n 6  2021 Male     106 Liver            C22         84 25.7       20.9      21.7 \n 7  2021 Male     107 Gallbladder      C23-…       21  6.41       5.19      5.57\n 8  2021 Male     108 Pancreas         C25         28  8.55       6.81      7.14\n 9  2021 Male     109 Larynx           C32         15  4.58       3.70      3.97\n10  2021 Male     110 Lung             C33-…      230 70.2       57.6      59.3 \n# ℹ 38 more rows\n# ℹ 4 more variables: truncr_cn2000 <dbl>, truncr_wld85 <dbl>, cumur <dbl>,\n#   prop <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n## Calculating quality indicators {.smaller}\n> create_quality function can calculate quality indicators including number of cancer cases, crude incidence, mortality, mortality:incidence ratio, proportion of morphology diagnosed cases, dco, UB%, etc based on 'canreg' or 'fbswicd' data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# calculate quality indicators based on 'canreg' data\ncreate_quality(data, year, sex, cancer) |> filter(!cancer == 0) |> \n  add_labels(lang = \"en\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 56 × 16\n    year sex   cancer site    icd10    rks   fbs    fbl   sws    swl    mi    mv\n   <int> <fct>  <int> <fct>   <fct>  <int> <int>  <dbl> <int>  <dbl> <dbl> <dbl>\n 1  2021 Male      60 All Ca… ALL   327403  1087 332.     560 171.    0.52  76.5\n 2  2021 Male      61 All Ca… ALLb… 327403  1068 326.     554 169.    0.52  76.3\n 3  2021 Male     101 Oral C… C00-… 327403    18   5.5     10   3.05  0.56  55.6\n 4  2021 Male     102 Nasoph… C11   327403     5   1.53     4   1.22  0.8   40  \n 5  2021 Male     103 Esopha… C15   327403    47  14.4     35  10.7   0.74  87.2\n 6  2021 Male     104 Stomach C16   327403    65  19.8     55  16.8   0.85  73.8\n 7  2021 Male     105 Conlon… C18-… 327403    87  26.6     55  16.8   0.63  77.0\n 8  2021 Male     106 Liver   C22   327403    84  25.7     77  23.5   0.92  66.7\n 9  2021 Male     107 Gallbl… C23-… 327403    21   6.41    16   4.89  0.76  85.7\n10  2021 Male     108 Pancre… C25   327403    28   8.55    28   8.55  1     50  \n# ℹ 46 more rows\n# ℹ 4 more variables: dco <dbl>, ub <dbl>, sub <dbl>, m8000 <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n## Calculating quality indicators {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# calculate quality indicators based on 'fbswicd' data\ncreate_quality(fbsw, year, sex) |>\n  add_labels(lang = \"en\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 16\n   year sex    cancer site      icd10    rks   fbs   fbl   sws   swl    mi    mv\n  <int> <fct>   <dbl> <fct>     <fct>  <int> <int> <dbl> <int> <dbl> <dbl> <dbl>\n1  2021 Male       60 All Canc… ALL   327403  1087  332.   560  171.  0.52  76.5\n2  2021 Female     60 All Canc… ALL   355707  1462  411.   410  115.  0.28  84.1\n# ℹ 4 more variables: dco <dbl>, ub <dbl>, sub <dbl>, m8000 <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\ncreate_quality(fbsw, cancer) |>\n  filter(!cancer == 0) |> \n  add_labels(lang = \"en\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 28 × 16\n    year sex   cancer site    icd10    rks   fbs    fbl   sws    swl    mi    mv\n   <dbl> <fct>  <int> <fct>   <fct>  <int> <int>  <dbl> <int>  <dbl> <dbl> <dbl>\n 1  9000 Total     60 All Ca… ALL   683110  2549 373.     970 142     0.38  80.9\n 2  9000 Total     61 All Ca… ALLb… 683110  2516 368.     956 140.    0.38  80.8\n 3  9000 Total    101 Oral C… C00-… 683110    26   3.81    13   1.9   0.5   57.7\n 4  9000 Total    102 Nasoph… C11   683110     7   1.02     5   0.73  0.71  57.1\n 5  9000 Total    103 Esopha… C15   683110    66   9.66    46   6.73  0.7   86.4\n 6  9000 Total    104 Stomach C16   683110   101  14.8     79  11.6   0.78  71.3\n 7  9000 Total    105 Conlon… C18-… 683110   181  26.5    103  15.1   0.57  81.2\n 8  9000 Total    106 Liver   C22   683110   125  18.3    100  14.6   0.8   68  \n 9  9000 Total    107 Gallbl… C23-… 683110    44   6.44    31   4.54  0.7   86.4\n10  9000 Total    108 Pancre… C25   683110    46   6.73    57   8.34  1.24  43.5\n# ℹ 18 more rows\n# ℹ 4 more variables: dco <dbl>, ub <dbl>, sub <dbl>, m8000 <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n## Calculating age specific rate  {.smaller}\n> create_age_rate function could calculate age specific rate based on 'canreg' or 'fbswicd' data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# calculate age specific rate from 'canreg' data.\ncreate_age_rate(data, year, sex, cancer, format = \"long\") |> \n  filter(!cancer == 0) |> \n  arrange(year, sex, cancer, agegrp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,064 × 6\n    year   sex cancer agegrp   cases  rate\n   <int> <int>  <int> <fct>    <int> <dbl>\n 1  2021     1     60 0 岁         3  77.9\n 2  2021     1     60 1-4 岁       3  20.8\n 3  2021     1     60 10-14 岁     0   0  \n 4  2021     1     60 15-19 岁     2  10.7\n 5  2021     1     60 20-24 岁     5  18.0\n 6  2021     1     60 25-29 岁    14  38.7\n 7  2021     1     60 30-34 岁    39 133. \n 8  2021     1     60 35-39 岁    38 127. \n 9  2021     1     60 40-44 岁    60 196. \n10  2021     1     60 45-49 岁    64 240. \n# ℹ 1,054 more rows\n```\n\n\n:::\n:::\n\n\n\n## Calculating age specific rate {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# calculate age specific rate from 'fbswicd' data.\ncreate_age_rate(fbsw, year, sex, cancer, format = \"wide\") |>\n  filter(!cancer == 0) |> \n  add_labels(lang = \"en\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 56 × 45\n    year sex   cancer site       icd10    f0    f1    f2    f3    f4    f5    f6\n   <int> <fct>  <int> <fct>      <fct> <int> <int> <int> <int> <int> <int> <int>\n 1  2021 Male      60 All Cance… ALL    1087     3     3     0     2     5    14\n 2  2021 Male      61 All Cance… ALLb…  1068     3     3     0     2     5    14\n 3  2021 Male     101 Oral Cavi… C00-…    18     0     0     0     0     0     0\n 4  2021 Male     102 Nasophary… C11       5     0     0     0     0     0     0\n 5  2021 Male     103 Esophagus  C15      47     0     0     0     0     0     0\n 6  2021 Male     104 Stomach    C16      65     0     0     0     0     0     0\n 7  2021 Male     105 Conlon, R… C18-…    87     0     0     0     0     0     1\n 8  2021 Male     106 Liver      C22      84     0     1     0     0     0     0\n 9  2021 Male     107 Gallbladd… C23-…    21     0     0     0     0     0     0\n10  2021 Male     108 Pancreas   C25      28     0     0     0     0     0     0\n# ℹ 46 more rows\n# ℹ 33 more variables: f7 <int>, f8 <int>, f9 <int>, f10 <int>, f11 <int>,\n#   f12 <int>, f13 <int>, f14 <int>, f15 <int>, f16 <int>, f17 <int>,\n#   f18 <int>, f19 <int>, r0 <dbl>, r1 <dbl>, r2 <dbl>, r3 <dbl>, r4 <dbl>,\n#   r5 <dbl>, r6 <dbl>, r7 <dbl>, r8 <dbl>, r9 <dbl>, r10 <dbl>, r11 <dbl>,\n#   r12 <dbl>, r13 <dbl>, r14 <dbl>, r15 <dbl>, r16 <dbl>, r17 <dbl>,\n#   r18 <dbl>, r19 <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n# Batch mode (deal with data from multiple cancer registries)\n## Reading data from multiple raw data files\n> Object with class of 'canregs' is a list with elements of object with class of 'canreg', it could be read using the 'read_canreg' function. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiles <- list.files(\"~/website/slides/outputs\", full.names = TRUE)\n# read the first 10 raw files in outputs folder into 'canregs'\ndata <- read_canreg(files[1:10])\nclass(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"canregs\" \"list\"   \n```\n\n\n:::\n\n```{.r .cell-code}\nnames(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"410102\" \"410103\" \"410104\" \"410105\" \"410123\" \"410185\" \"410224\" \"410302\"\n [9] \"410303\" \"410304\"\n```\n\n\n:::\n:::\n\n\n\n## Summary the canregs data {.smaller}\n> summary function could quickly calculate summary data of 'canreg' or 'canregs' object.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsumm <- summary(data)\nnames(summ)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"410102\" \"410103\" \"410104\" \"410105\" \"410123\" \"410185\" \"410224\" \"410302\"\n [9] \"410303\" \"410304\"\n```\n\n\n:::\n\n```{.r .cell-code}\nsumm1 <- cr_select(summ, inci > 300, mi > 0.4)\nnames(summ1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"410302\" \"410303\" \"410304\"\n```\n\n\n:::\n\n```{.r .cell-code}\nsumm2 <- cr_select(summ, inci > 290 | mort > 150)\nnames(summ2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"410102\" \"410103\" \"410104\" \"410105\" \"410302\" \"410303\" \"410304\"\n```\n\n\n:::\n\n```{.r .cell-code}\nsumm3 <- cr_select(summ, index = c(\"410102\", \"410303\"))\nnames(summ3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"410102\" \"410303\"\n```\n\n\n:::\n:::\n\n\n\n## Filter the canregs data\n> cr_select function can filter 'carengs', 'fbswicds', 'asrs', and, 'summaries' based on input conditions.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata2 <- data |> cr_select(index = names(summ2))\nnames(data2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"410102\" \"410103\" \"410104\" \"410105\" \"410302\" \"410303\" \"410304\"\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(summ2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"410102\" \"410103\" \"410104\" \"410105\" \"410302\" \"410303\" \"410304\"\n```\n\n\n:::\n:::\n\n\n\n## Counting 'canregs' data {.smaller}\n> count_canreg function can count 'canregs' data into 'fbswicds' data, which is a list of elements of 'fbswicd' data that could used as input data for create_asr, create_quality, create_sheet, etc.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfbsw <- count_canreg(data2)\nclass(fbsw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"fbswicds\" \"list\"    \n```\n\n\n:::\n\n```{.r .cell-code}\nnames(fbsw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"410102\" \"410103\" \"410104\" \"410105\" \"410302\" \"410303\" \"410304\"\n```\n\n\n:::\n:::\n\n\n\n\n## Calculate age standardized rate\n> create_asr function can also calculate age standard rate based on 'fbswicds' data. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nasrs <- create_asr(fbsw, event = fbs, year, sex)\nclass(asrs)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"asrs\" \"list\"\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(asrs)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$`410102`\n# A tibble: 2 × 11\n   year   sex cancer no_cases    cr asr_cn2000 asr_wld85 truncr_cn2000\n  <int> <int>  <dbl>    <int> <dbl>      <dbl>     <dbl>         <dbl>\n1  2021     1     60     1087  332.       275.      273.          430.\n2  2021     2     60     1462  411.       335.      315.          546.\n# ℹ 3 more variables: truncr_wld85 <dbl>, cumur <dbl>, prop <dbl>\n\n$`410103`\n# A tibble: 2 × 11\n   year   sex cancer no_cases    cr asr_cn2000 asr_wld85 truncr_cn2000\n  <int> <int>  <dbl>    <int> <dbl>      <dbl>     <dbl>         <dbl>\n1  2021     1     60     1236  376.       256.      248.          380.\n2  2021     2     60     1564  436.       319.      297.          526.\n# ℹ 3 more variables: truncr_wld85 <dbl>, cumur <dbl>, prop <dbl>\n\n$`410104`\n# A tibble: 2 × 11\n   year   sex cancer no_cases    cr asr_cn2000 asr_wld85 truncr_cn2000\n  <int> <int>  <dbl>    <int> <dbl>      <dbl>     <dbl>         <dbl>\n1  2021     1     60      743  327.       254.      249.          385.\n2  2021     2     60      912  360.       299.      280.          490.\n# ℹ 3 more variables: truncr_wld85 <dbl>, cumur <dbl>, prop <dbl>\n\n$`410105`\n# A tibble: 2 × 11\n   year   sex cancer no_cases    cr asr_cn2000 asr_wld85 truncr_cn2000\n  <int> <int>  <dbl>    <int> <dbl>      <dbl>     <dbl>         <dbl>\n1  2021     1     60     1877  406.       300.      286.          415.\n2  2021     2     60     2506  495.       380.      350.          604.\n# ℹ 3 more variables: truncr_wld85 <dbl>, cumur <dbl>, prop <dbl>\n\n$`410302`\n# A tibble: 2 × 11\n   year   sex cancer no_cases    cr asr_cn2000 asr_wld85 truncr_cn2000\n  <int> <int>  <dbl>    <int> <dbl>      <dbl>     <dbl>         <dbl>\n1  2021     1     60      298  359.       235.      231.          342.\n2  2021     2     60      278  322.       199.      190.          331.\n# ℹ 3 more variables: truncr_wld85 <dbl>, cumur <dbl>, prop <dbl>\n\n$`410303`\n# A tibble: 2 × 11\n   year   sex cancer no_cases    cr asr_cn2000 asr_wld85 truncr_cn2000\n  <int> <int>  <dbl>    <int> <dbl>      <dbl>     <dbl>         <dbl>\n1  2021     1     60      625  383.       280.      311.          275.\n2  2021     2     60      599  370.       235.      226.          335.\n# ℹ 3 more variables: truncr_wld85 <dbl>, cumur <dbl>, prop <dbl>\n```\n\n\n:::\n:::\n\n\n\n## Merge age standardized rate(asrs)\n> cr_merge function cancer merge 'carengs', 'fbswicds', 'asrs', 'qualities' into 'canreg', 'fbswicd', 'asr', and 'quality' data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nasrs2 <- asrs |> cr_merge()\nhead(asrs2, c(6,8))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 8\n  areacode  year   sex cancer no_cases    cr asr_cn2000 asr_wld85\n     <int> <int> <int>  <dbl>    <int> <dbl>      <dbl>     <dbl>\n1   410102  2021     1     60     1087  332.       275.      273.\n2   410102  2021     2     60     1462  411.       335.      315.\n3   410103  2021     1     60     1236  376.       256.      248.\n4   410103  2021     2     60     1564  436.       319.      297.\n5   410104  2021     1     60      743  327.       254.      249.\n6   410104  2021     2     60      912  360.       299.      280.\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(asrs2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"areacode\"      \"year\"          \"sex\"           \"cancer\"       \n [5] \"no_cases\"      \"cr\"            \"asr_cn2000\"    \"asr_wld85\"    \n [9] \"truncr_cn2000\" \"truncr_wld85\"  \"cumur\"         \"prop\"         \n```\n\n\n:::\n:::\n\n\n\n## Creating quality indicators\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqualities <- create_quality(fbsw, year, sex, collapse=F)\nqualities\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$`410102`\n# A tibble: 2 × 14\n   year   sex cancer    rks   fbs   fbl   sws   swl    mi    mv   dco    ub\n  <int> <int>  <dbl>  <int> <int> <dbl> <int> <dbl> <dbl> <dbl> <dbl> <dbl>\n1  2021     1     60 327403  1087  332.   560  171.  0.52  76.5  1.47  1.75\n2  2021     2     60 355707  1462  411.   410  115.  0.28  84.1  0.82  1.92\n# ℹ 2 more variables: sub <dbl>, m8000 <dbl>\n\n$`410103`\n# A tibble: 2 × 14\n   year   sex cancer    rks   fbs   fbl   sws   swl    mi    mv   dco    ub\n  <int> <int>  <dbl>  <int> <int> <dbl> <int> <dbl> <dbl> <dbl> <dbl> <dbl>\n1  2021     1     60 328415  1236  376.   676  206.  0.55  73.1  0.65  2.1 \n2  2021     2     60 358941  1564  436.   410  114.  0.26  76.6  1.02  1.98\n# ℹ 2 more variables: sub <dbl>, m8000 <dbl>\n\n$`410104`\n# A tibble: 2 × 14\n   year   sex cancer    rks   fbs   fbl   sws   swl    mi    mv   dco    ub\n  <int> <int>  <dbl>  <int> <int> <dbl> <int> <dbl> <dbl> <dbl> <dbl> <dbl>\n1  2021     1     60 227511   743  327.   371 163.   0.5   81.4  0.54  1.75\n2  2021     2     60 253077   912  360.   252  99.6  0.28  81.5  0.33  1.21\n# ℹ 2 more variables: sub <dbl>, m8000 <dbl>\n\n$`410105`\n# A tibble: 2 × 14\n   year   sex cancer    rks   fbs   fbl   sws   swl    mi    mv   dco    ub\n  <int> <int>  <dbl>  <int> <int> <dbl> <int> <dbl> <dbl> <dbl> <dbl> <dbl>\n1  2021     1     60 462738  1877  406.   793  171.  0.42  76.9  0.69  1.55\n2  2021     2     60 506456  2506  495.   555  110.  0.22  79.6  0.2   1.52\n# ℹ 2 more variables: sub <dbl>, m8000 <dbl>\n\n$`410302`\n# A tibble: 2 × 14\n   year   sex cancer   rks   fbs   fbl   sws   swl    mi    mv   dco    ub   sub\n  <int> <int>  <dbl> <int> <int> <dbl> <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1  2021     1     60 83010   298  359.   157  189.  0.53  69.8  0     1.01  63.8\n2  2021     2     60 86359   278  322.   105  122.  0.38  74.1  0.72  0.72  70.5\n# ℹ 1 more variable: m8000 <dbl>\n\n$`410303`\n# A tibble: 2 × 14\n   year   sex cancer    rks   fbs   fbl   sws   swl    mi    mv   dco    ub\n  <int> <int>  <dbl>  <int> <int> <dbl> <int> <dbl> <dbl> <dbl> <dbl> <dbl>\n1  2021     1     60 163005   625  383.   412  253.  0.66  76.8  1.12  0.96\n2  2021     2     60 161724   599  370.   252  156.  0.42  84.5  1.5   2.5 \n# ℹ 2 more variables: sub <dbl>, m8000 <dbl>\n\n$`410304`\n# A tibble: 2 × 14\n   year   sex cancer    rks   fbs   fbl   sws   swl    mi    mv   dco    ub\n  <int> <int>  <dbl>  <int> <int> <dbl> <int> <dbl> <dbl> <dbl> <dbl> <dbl>\n1  2021     1     60  99735   441  442.   242  243.  0.55  72.3  2.72  2.72\n2  2021     2     60 100963   359  356.   152  151.  0.42  79.4  2.51  1.11\n# ℹ 2 more variables: sub <dbl>, m8000 <dbl>\n\nattr(,\"class\")\n[1] \"qualities\" \"list\"     \n```\n\n\n:::\n:::\n\n\n\n## Merge quality indicators\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqualities2 <- qualities |> cr_merge()\nhead(qualities2,c(6,12))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 12\n  areacode  year   sex cancer    rks   fbs   fbl   sws   swl    mi    mv   dco\n     <int> <int> <int>  <dbl>  <int> <int> <dbl> <int> <dbl> <dbl> <dbl> <dbl>\n1   410102  2021     1     60 327403  1087  332.   560 171.   0.52  76.5  1.47\n2   410102  2021     2     60 355707  1462  411.   410 115.   0.28  84.1  0.82\n3   410103  2021     1     60 328415  1236  376.   676 206.   0.55  73.1  0.65\n4   410103  2021     2     60 358941  1564  436.   410 114.   0.26  76.6  1.02\n5   410104  2021     1     60 227511   743  327.   371 163.   0.5   81.4  0.54\n6   410104  2021     2     60 253077   912  360.   252  99.6  0.28  81.5  0.33\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(qualities2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"areacode\" \"year\"     \"sex\"      \"cancer\"   \"rks\"      \"fbs\"     \n [7] \"fbl\"      \"sws\"      \"swl\"      \"mi\"       \"mv\"       \"dco\"     \n[13] \"ub\"       \"sub\"      \"m8000\"   \n```\n\n\n:::\n:::\n\n\n\n# Reframe fbsws\n## show attributes of cancer registry affiliated with areacode\n> tidy_areacode function show attributes of cancer registry affiliated with areacode.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattributes <- tidy_areacode(\"410302\")\nnames(attributes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"areacode\"  \"registry\"  \"province\"  \"city\"      \"area_type\" \"region\"   \n```\n\n\n:::\n:::\n\n\n\n> You cancer use **write_registry**, or **write_area_type** function to modify the attributes of the registry.\n\n## Reframe 'fbswicds' to 'fbswicd'\n> You can reframe the 'fbswicds' according to the attribute name of registry like 'area_type', 'registry', 'province', etc.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_canreg(files[1:10])\nfbsws <- count_canreg(data)\nclass(fbsws)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"fbswicds\" \"list\"    \n```\n\n\n:::\n\n```{.r .cell-code}\nnames(fbsws)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"410102\" \"410103\" \"410104\" \"410105\" \"410123\" \"410185\" \"410224\" \"410302\"\n [9] \"410303\" \"410304\"\n```\n\n\n:::\n\n```{.r .cell-code}\nfbsw <- reframe_fbswicd(fbsws, area_type)\nclass(fbsw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"fbswicd\" \"list\"   \n```\n\n\n:::\n:::\n\n\n\n## Ceating asr based on reframed fbsws\n\n\n::: {.cell}\n\n```{.r .cell-code}\nasr <- create_asr(fbsw, area_type, sex)\nhead(asr, c(6, 8))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 8\n   year   sex cancer area_type no_cases    cr asr_cn2000 asr_wld85\n  <dbl> <int>  <dbl> <fct>        <int> <dbl>      <dbl>     <dbl>\n1  9000     1     60 城市          6307  373.       264.      257.\n2  9000     2     60 城市          7680  421.       312.      290.\n3  9000     1     60 农村          2704  235.       176.      171.\n4  9000     2     60 农村          2936  265.       200.      187.\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(asr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"year\"          \"sex\"           \"cancer\"        \"area_type\"    \n [5] \"no_cases\"      \"cr\"            \"asr_cn2000\"    \"asr_wld85\"    \n [9] \"truncr_cn2000\" \"truncr_wld85\"  \"cumur\"         \"prop\"         \n```\n\n\n:::\n:::\n\n\n\n# Visualization\n## Draw pyramid plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(showtext)\nshowtext_auto()\ndata <- read_canreg(files[10])\nfbsw <- count_canreg(data)\ndraw_pyramid(fbsw, show_value = F)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-24-1.png){width=960}\n:::\n:::\n\n\n\n## Draw bar chart {.smaller}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nasr <- create_asr(fbsw,year,sex,cancer) |> drop_total() |>\n  drop_others() |> add_labels(label_type = \"abbr\", lang = \"en\")\ndraw_barchart(asr, plot_var =cr, cate_var = site,\n              side_label = c(\"Male\",\"Female\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-25-1.png){width=960}\n:::\n:::\n\n\n\n\n## Draw bar chart {.smaller}\n\n\n\n::: {.cell .fig-column-page-right}\n\n```{.r .cell-code}\nlibrary(dplyr)\nasr1 <- create_asr(fbsw,year,sex,cancer,event = fbs) |> mutate(type=\"incidence\")\nasr2 <- create_asr(fbsw,year,sex,cancer,event = sws) |> mutate(type=\"mortality\")\nasr <- bind_rows(asr1, asr2) |> drop_others() |> drop_total() |> \n  add_labels(label_type = \"abbr\",lang = \"en\")\ndraw_barchart(asr, plot_var =cr, cate_var = site,group_var = type,\n              side_label = c(\"Male\",\"Female\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-26-1.png){width=960}\n:::\n:::\n\n\n\n\n## Draw line chart {.smaller}\n\n\n\n::: {.cell .fig-column-page-right}\n\n```{.r .cell-code}\nagerate <- create_age_rate(fbsw,sex) |> add_labels(lang=\"en\")\nnames(agerate)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"year\"   \"sex\"    \"cancer\" \"site\"   \"icd10\"  \"agegrp\" \"cases\"  \"rate\"  \n```\n\n\n:::\n\n```{.r .cell-code}\ndraw_line(agerate, agegrp, rate, sex)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-27-1.png){width=960}\n:::\n:::\n",
    "supporting": [
      "index_files/figure-revealjs"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}